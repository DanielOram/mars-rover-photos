{"version":3,"sources":["static/img/robot.svg","contexts.js","components/Navbar.jsx","components/RoverPhotos.jsx","components/ListRovers.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["_path","_path2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRobot","_ref","svgRef","title","titleId","props","xmlns","width","height","fill","className","viewBox","ref","id","d","ForwardRef","RoversContext","createContext","rovers","selectedRover","setSelectedRover","dateOfPhotos","setDateOfPhotos","ReturnToRoverSelectionNavLink","useContext","onClick","event","prev","to","Navbar","style","DisplayPhotos","useState","photos","setPhotos","apiError","setApiError","filterOptions","setFilterOptions","toggleOn","setToggleOn","sol","setSol","setNumApiCalls","setPhotosLoaded","showModal","selectedPhoto","setSelectedPhoto","useEffect","undefined","filter","rover","name","toLowerCase","match","params","getPhotos","axios","get","process","then","res","photo_objects","data","grouped_data","map","photo","camera","full_name","rover_id","img_src","earth_date","landing_date","launch_date","status","reduce","newDataDict","obj","concat","processPhotoData","date","catch","error","message","min","max","max_sol","initial","sliderValue","onSliderChange","e","value","ButtonGroup","toggle","ToggleButton","type","variant","checked","onChange","currentTarget","photo_group","ToggleButtonGroup","defaultValue","selectedValues","Badge","text","includes","setSelectedPhotoObj","show","modalPhotoObj","setModalPhotoObj","CameraPhotoList","zIndex","position","cursor","Photo","preventDefault","src","alt","SolToolTipOverlayTrigger","OverlayTrigger","placement","delay","hide","overlay","Tooltip","SliderWithInputFormControl","initialSliderValue","setValue","Form","Group","as","Row","Col","xs","md","lg","tooltipPlacement","onAfterChange","InputGroup","Text","Control","DateDisplay","format","SelectedPhotoModal","Modal","onHide","size","centered","Header","closeButton","Title","Body","display","justifyContent","overflow","Footer","ListRovers","Spinner","animation","roverName","roverID","handleClick","path","component","RoverPhotos","NavigateToRoverPhotosBtn","history","useHistory","push","children","FeaturedRover","total_photos","href","App","setRovers","max_date","cameras","console","log","response","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yIAAIA,EAAOC,E,kFAEX,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAASC,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,EAAS,CACtD6B,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,eACNC,UAAW,cACXC,QAAS,YACTC,IAAKV,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DU,GAAIT,GACHD,GAAS,KAAM5B,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EuC,EAAG,wmBACAtC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEsC,EAAG,qRAIP,IAAIC,EAA0B,aAAiBf,GC9BlCgB,GD+BE,IC/BcC,wBAAc,CACvCC,OAAQ,GACRC,cAAe,KACfC,iBAAkB,kBAAM,MACxBC,aAAc,KACdC,gBAAiB,kBAAM,S,OCuB3B,IAAMC,EAAgC,WAAO,IACjCH,EAAqBI,qBAAWR,GAAhCI,iBAIR,OACI,cAAC,IAAD,CAAMK,QAJU,SAACC,GACjBN,GAAiB,SAACO,GAAD,OAAU,SAGCjB,UAAU,qCAAqCkB,GAAG,qBAA9E,2BAIOC,EAjCf,WAAmB,IAAD,EAE8BL,qBAAWR,GAA/CG,EAFM,EAENA,cAAeC,EAFT,EAESA,iBAGvB,OACI,qBAAKV,UAAU,2CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,eAAC,IAAD,CAAMe,QAAS,kBAAML,EAAiB,OAAOQ,GAAG,qBAAqBlB,UAAU,eAA/E,UAA8F,cAAC,EAAD,CAAWoB,MAAO,CAACvB,MAAO,MAAOC,OAAQ,QAASE,UAAU,gCAA+B,sBAAMA,UAAU,oBAAhB,kCACzL,oBAAIA,UAAU,gBAAd,SACI,oBAAIA,UAAU,WAAd,SACKS,GACG,cAAC,EAAD,c,kJC6PbY,EApPO,SAAC1B,GAAU,MAGD2B,mBAAS,IAHR,mBAGtBC,EAHsB,KAGdC,EAHc,OAIGF,mBAAS,MAJZ,mBAItBG,EAJsB,KAIZC,EAJY,OAOaJ,mBAAS,IAPtB,mBAOtBK,EAPsB,KAOPC,EAPO,OASGN,oBAAS,GATZ,mBAStBO,EATsB,KASZC,EATY,OAWPR,mBAAS,GAXF,mBAWtBS,EAXsB,KAWjBC,EAXiB,OAaSV,mBAAS,GAblB,mBAaTW,GAbS,aAcWX,oBAAS,GAdpB,mBAcRY,GAdQ,aAiBKZ,oBAAS,GAjBd,mBAiBtBa,EAjBsB,aAkBab,mBAAS,OAlBtB,mBAkBtBc,EAlBsB,KAkBPC,EAlBO,OAoBsDvB,qBAAWR,GAAtFE,EApBqB,EAoBrBA,OAAQC,EApBa,EAoBbA,cAAeC,EApBF,EAoBEA,iBAAkBC,EApBpB,EAoBoBA,aAAcC,EApBlC,EAoBkCA,gBAE/D0B,qBAAU,WAEiB,OAAlB7B,OAA2C8B,IAAlB9B,GAAgCD,EAAOnC,OAAS,GAC1EqC,GAAiB,WAEb,OADcF,EAAOgC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,gBAAkBhD,EAAMiD,MAAMC,OAAOJ,MAAME,iBAAe,QAIpH,CAACnC,IAEH8B,qBAAU,WACNQ,MACF,CAACf,IAEH,IAAMe,EAAY,WACdZ,GAAgB,GAEhBa,IAAMC,IAAN,yDAA4DrD,EAAMiD,MAAMC,OAAOJ,MAAME,cAArF,WAA6G,CACzGE,OAAQ,CACJ,QA9CmBI,2CA+CnB,IAAOlB,KAGhBmB,MAAK,SAAAC,GACJ3B,GAAU,WACN,IAAM4B,EAgCd,SAA0BC,GACtB,IAsBMC,EAtBeD,EAAK9B,OAAOgC,KAAI,SAAAC,GAAK,MACtC,CACIrD,GAAIqD,EAAMrD,GACV4B,IAAKyB,EAAMzB,IACX0B,OAAQ,CACJtD,GAAIqD,EAAMC,OAAOtD,GACjBuC,KAAMc,EAAMC,OAAOf,KACnBgB,UAAWF,EAAMC,OAAOC,UACxBC,SAAUH,EAAMC,OAAOE,UAE3BC,QAASJ,EAAMI,QACfC,WAAYL,EAAMK,WAClBpB,MAAO,CACHtC,GAAIqD,EAAMf,MAAMtC,GAChBuC,KAAMc,EAAMf,MAAMC,KAClBoB,aAAcN,EAAMf,MAAMqB,aAC1BC,YAAaP,EAAMf,MAAMsB,YACzBC,OAAQR,EAAMf,MAAMuB,YAM3BC,QAAO,SAACC,EAAaC,GAClB,OAAOnG,OAAOC,OACdiG,EADOlG,OAAA,IAAAA,CAAA,GAGFmG,EAAG,OAAH,MAAwBD,EAAYC,EAAG,OAAH,OAA0B,IAAIC,OAAOD,OAGhF,IAYN,OAV0BnG,OAAOgB,KAAKsE,GACjCC,KAAI,SAACE,GACF,MAAO,CACHA,OAAQA,EACRf,KAAMY,EAAaG,GAAQ,GAArB,iBACNlC,OAAQ+B,EAAaG,OAtEPY,CAAiBlB,EAAIE,MAU3C,OATAzB,GAAiB,WAAO,OAAOwB,EAAcG,KAAI,SAAAC,GAAU,OAAOA,EAAMC,aAExE7C,GAAgB,WACZ,IAAI0D,EAAO,KAIX,OAHIlB,GAAiBA,EAAc/E,OAAS,IACxCiG,EAAOlB,EAAc,GAAG7B,OAAO,GAAGsC,YAE/BS,KAEJlB,KAGXnB,GAAe,SAAChB,GAAD,OAAUA,EAAO,KAChCiB,GAAgB,GAChBR,EAAY,SAEb6C,OAAM,SAAAC,GACH9C,EAAY8C,EAAMC,aA4DxB,OACI,qCACI,sBAAKzE,UAAU,YAAf,WACMyB,GAEE,qCAEI,qBAAKzB,UAAU,WAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CACI0E,IAAK,EACLC,IAAKlE,EAAgBA,EAAcmE,QAAU,EAC7CC,QAAS9C,EACT+C,YAAa/C,EACbgD,eAlEF,SAACC,GAC3BhD,EAAOgD,EAAE9G,OAAO+G,cA4ECtE,GACG,sBAAKX,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,SAEI,cAACkF,EAAA,EAAD,CAAaC,QAAM,EAAnB,SACI,cAACC,EAAA,EAAD,CACAC,KAAK,WACLC,QAAQ,oBACRC,QAAS1D,EACToD,MAAM,IACNO,SAAU,SAACR,GACPlD,EAAYkD,EAAES,cAAcF,SACxBP,EAAES,cAAcF,QAChB3D,GAAiB,WAAO,OAAOL,EAAOgC,KAAI,SAAAmC,GAAgB,OAAOA,EAAYjC,aAE7E7B,EAAiB,KAVzB,+BAmBR,qBAAK5B,UAAU,mCAAf,SACI,cAAC2F,EAAA,EAAD,CACIN,KAAK,WACL3C,KAAK,wBACLkD,aAAc,GACdX,MAAOtD,EACP6D,SA/GF,SAACK,GAC/BjE,EAAiBiE,IAyGW,SAOCtE,EAAOgC,KAAI,SAAAmC,GAAW,OACX,eAACN,EAAA,EAAD,CAAuCH,MAAOS,EAAYjC,OAAQzD,UAAU,yDAAyDsF,QAAQ,kBAA7I,UACI,eAACQ,EAAA,EAAD,CAAQC,KAAK,OAAb,UAAqBL,EAAYnE,OAAOlD,OAAxC,aACA,sBAAM2B,UAAU,OAAhB,SAAwB0F,EAAYjC,WAFrBiC,EAAYjC,mBAgBrD9C,GACE,sBAAKX,UAAU,MAAf,UACI,+EACA,0GAGPW,GACG,qBAAKX,UAAU,cAAf,SACI,qBAAKA,UAAU,gCAAf,SACKuB,EAAOiB,QAAO,SAAAkD,GAAgB,OAAO/D,EAAcqE,SAASN,EAAYjC,WAAWF,KAAI,SAAAmC,GACpF,OACI,mCACI,cAAC,EAAD,CAAiBA,YAAaA,EAAaO,oBAAqB5D,gBAgB/FZ,GACG,qCACI,8EACA,4BAAIA,UAQf,cAAC,EAAD,CAAoByE,KAAM/D,EAAWgE,cAAe/D,EAAegE,iBAAkB/D,QAS5FgE,EAAkB,SAAC,GAA0C,IAAxCX,EAAuC,EAAvCA,YAAaO,EAA0B,EAA1BA,oBAEpC,OACI,sBAA8BjG,UAAU,SAASoB,MAAO,CAACtB,OAAQ,QAAjE,UACI,qBACIsB,MAAO,CAACkF,OAAQ,EAAGC,SAAU,WAAYC,OAAQ,WACjDxG,UAAU,oCAFd,SAII,oBAAIA,UAAU,gBAAd,SAA+B0F,EAAYjC,WAG9CiC,EAAYnE,OAAOgC,KAAI,SAAAC,GAAK,OACzB,cAAC,EAAD,CAAOA,MAAOA,EAAO4C,iBAAkBH,SATrCP,EAAYjC,SAgBxBgD,EAAQ,SAAC,GAAiC,IAA/BjD,EAA8B,EAA9BA,MAAO4C,EAAuB,EAAvBA,iBAMpB,OACI,qBAAKrF,QALW,SAACC,GACjBA,EAAM0F,iBACNN,EAAiB5C,IAGyBxD,UAAU,aAAa2G,IAAKnD,EAAMI,QAASgD,IAAI,IAAzDpD,EAAMrD,KAMxC0G,EAA2B,WAG7B,OACI,cAACC,EAAA,EAAD,CACIC,UAAU,MACVC,MAAO,CAAEd,KAAM,IAAKe,KAAM,KAC1BC,QAAS,cAACC,EAAA,EAAD,UANM,+HAGnB,SAKI,yCAMNC,EAA6B,SAACzH,GAIhC,IAAM0H,EAAqB1H,EAAMkF,QAJS,EAKdvD,mBAAS+F,GALK,mBAKlCpC,EALkC,KAK3BqC,EAL2B,KAO1C,OACE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAI9H,UAAU,YAApC,SACE,cAAC,IAAD,CACE0E,IAAK/E,EAAM+E,IACXC,IAAKhF,EAAMgF,IACXM,MAAOA,EACP8C,iBAAiB,MACjBvC,SAAU,SAAAR,GAAC,OAAIsC,EAAStC,EAAE9G,OAAO+G,QACjC+C,cAAerI,EAAMoF,mBAGzB,cAAC4C,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI9H,UAAU,OAApC,SACA,eAACiI,EAAA,EAAD,WAEF,cAACA,EAAA,EAAWC,KAAZ,UACI,cAAC,EAAD,MAGA,cAACX,EAAA,EAAKY,QAAN,CACIlD,MAAOtF,EAAMmF,YACbU,SAAU,SAACR,GACPrF,EAAMoF,eAAeC,GACrBsC,EAAStC,EAAE9G,OAAO+G,qBAYzBmD,EAAc,WAAO,IAC1BzH,EAAiBG,qBAAWR,GAA5BK,aAGR,OAFA2B,qBAAU,cACR,CAAC3B,IAEC,cAAC,IAAD,CAAQ0H,OAAO,aAAf,SACK1H,KAKH2H,EAAqB,SAAC,GAA4C,EAA3CpC,KAA4C,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,iBAQ9C,OACI,mCAEI,eAACmC,EAAA,EAAD,CAAOrC,OAAMC,EAA8BqC,OAP/B,WAChBpC,EAAiB,OAMmDqC,KAAK,KAAKC,UAAQ,EAAlF,UACI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACA,cAACL,EAAA,EAAMM,MAAP,UACK1C,GAAa,UACPA,EAAc1D,MAAMC,KADb,uBACgCyD,EAAchG,GAD9C,SAKlB,cAACoI,EAAA,EAAMO,KAAP,CAAY1H,MAAO,CAAC2H,QAAS,OAAQC,eAAgB,UAArD,SACK7C,GACG,qBAAK/E,MAAO,CAAC6H,SAAU,UAAUtC,IAAKR,EAAcvC,QAASgD,IAAI,OAGzE,cAAC2B,EAAA,EAAMW,OAAP,CAAc9H,MAAO,CAAC2H,QAAS,UAA/B,SACK5C,GACG,qCACI,8BAAG,sBAAMnG,UAAU,mBAAhB,yBAAH,IAAyD,cAAC,IAAD,CAAQqI,OAAO,aAAf,SAA6BlC,EAActC,gBACpG,8BAAG,sBAAM7D,UAAU,mBAAhB,qBAAH,cAAyDmG,EAAc1C,OAAOC,UAA9E,aAA4FyC,EAAc1C,OAAOf,KAAjH,mB,QCvYb,SAASyG,IAAc,IAAD,EAEiCrI,qBAAWR,GAArEE,EAFyB,EAEzBA,OAAQC,EAFiB,EAEjBA,cAAeC,EAFE,EAEFA,iBAAkBC,EAFhB,EAEgBA,aAQjD,OACI,qCAGI,sBAAKX,UAAU,iBAAf,UAGI,sBAAKA,UAAU,kDAAf,UAMI,qBAAIA,UAAU,GAAd,UACKS,EAAgBA,EAAciC,KAAO,UAAY,eAC9B,WAAlBlC,EAAO,GAAGkC,MACR,cAAC0G,EAAA,EAAD,CAASpJ,UAAU,OAAOqJ,UAAU,OAAO/D,QAAQ,UAAUmD,KAAK,UAG1E,oBAAIzI,UAAU,sBAAd,SAAqCS,GAAiBE,GAAgB,cAAC,EAAD,UAIxEF,GACE,mCACI,qBAAKT,UAAU,wCAAf,SAEwB,WAAlBQ,EAAO,GAAGkC,MACRlC,EAAO+C,KAAI,SAAAd,GAAK,OACZ,cAAC,EAAD,CAA2C6G,UAAW7G,EAAMC,KAA5D,SACI,cAAC,EAAD,CAAeD,MAAOA,EAAO1B,QAAS,SAACC,GAAD,OApCtD,SAACA,EAAOuI,GACxBvI,EAAM0F,iBACNhG,EAAiBF,EAAOgC,QAAO,SAACC,GAAD,OAAWA,EAAMtC,KAAOoJ,KAAS,IAkCiBC,CAAYxI,EAAOyB,EAAMtC,QAD/CsC,EAAMC,gBAY7D,cAAC,IAAD,UACI,cAAC,IAAD,CAAO+G,KAAK,4BAA4BC,UAAWC,SAM5D,IAgBDC,EAA2B,SAACjK,GAC9B,IAAIkK,EAAUC,cAQd,OACI,qBAAK/I,QANW,SAACC,GACjBA,EAAM0F,iBACNmD,EAAQE,KAAR,6BAAmCpK,EAAM2J,aAIzC,SACK3J,EAAMqK,YAMbC,EAAgB,SAAC,GAAwB,IAAtBxH,EAAqB,EAArBA,MAAO1B,EAAc,EAAdA,QAC5B,OACI,sBACIf,UAAU,yBACVe,QAASA,EAFb,UAII,qBAAKf,UAAU,6GAAf,SACI,cAAC,EAAD,CAAWoB,MAAO,CAACvB,MAAO,MAAOC,OAAQ,WAE7C,oBAAIE,UAAU,OAAd,SAAsByC,EAAMC,OAC5B,oBAAG1C,UAAU,YAAb,6BAAyC,sBAAMA,UAAS,oBAA8B,WAAfyC,EAAMuB,OAAoB,eAAiB,kBAAzE,SAA8FvB,EAAMuB,SAA7I,OACA,oBAAGhE,UAAU,aAAb,+BAA6CyC,EAAMyH,gBACnD,cAAC,IAAD,CAAMhJ,GAAE,6BAAwBuB,EAAMC,MAAQ1C,UAAU,kBAAxD,iCC1GGkJ,EAXA,WACX,OACI,wBAAQlJ,UAAU,sCAAlB,SACI,sBAAKA,UAAU,kBAAf,UACI,2HAA6F,mBAAGmK,KAAK,wBAAR,iCAC7F,qBAAKnK,UAAU,aAAf,SAA4B,mBAAGmK,KAAK,gCAAR,4BCqE7BC,MA1Df,WAAe,MAGe9I,mBAAS,CAAC,CAAEoB,KAAM,aAHjC,mBAGNlC,EAHM,KAGE6J,EAHF,OAI6B/I,mBAAS,MAJtC,mBAINb,EAJM,KAISC,EAJT,OAK2BY,mBAAS,MALpC,mBAKNX,EALM,KAKQC,EALR,OAMmBU,qBANnB,mBAMNG,EANM,KAMIC,EANJ,KA0Cb,OAlCAY,qBAAU,WACRS,IAAMC,IAAN,iDAA4D,CACxDH,OAAQ,CACJ,QAfuBI,8CAkBhCC,MAAK,SAAAC,GACJkH,EAAUlH,EAAIE,KAAK7C,OAAO+C,KAAI,SAAAd,GAAK,MAC/B,CACItC,GAAIsC,EAAMtC,GACVuC,KAAMD,EAAMC,KACZoB,aAAcrB,EAAMqB,aACpBC,YAAatB,EAAMsB,YACnBC,OAAQvB,EAAMuB,OACdY,QAASnC,EAAMmC,QACf0F,SAAU7H,EAAM6H,SAChBJ,aAAczH,EAAMyH,aACpBK,QAAS9H,EAAM8H,QAAQhH,KAAI,SAAAE,GAAM,MAC7B,CACItD,GAAIsD,EAAOtD,GACXuC,KAAMe,EAAOf,KACbiB,SAAUF,EAAOE,SACjBD,UAAWD,EAAOC,sBAMnCa,OAAM,SAAAC,GACLgG,QAAQC,IAAIjG,EAAMkG,SAASrH,KAAKmB,OAChC9C,EAAY8C,QAEd,IAGE,qBAAKxE,UAAU,MAAf,SACE,eAACM,EAAcqK,SAAf,CAAwB1F,MAAO,CAAEzE,SAAQC,gBAAeC,mBAAkBC,eAAcC,mBAAxF,UACE,cAAC,EAAD,IACCa,GACG,0DAA6BA,KAEjC,cAAC0H,EAAD,IACA,cAAC,EAAD,UCtDOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5H,MAAK,YAAkD,IAA/C6H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c279cada.chunk.js","sourcesContent":["var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRobot(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-robot\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5ZM3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.58 26.58 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.933.933 0 0 1-.765.935c-.845.147-2.34.346-4.235.346-1.895 0-3.39-.2-4.235-.346A.933.933 0 0 1 3 9.219V8.062Zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a24.767 24.767 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25.286 25.286 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2V1.866ZM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRobot);\nexport default __webpack_public_path__ + \"static/media/robot.99d3c58e.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext } from 'react';\n\n// Context data\nexport const RoversContext = createContext({\n    rovers: [],\n    selectedRover: null,\n    setSelectedRover: () => null,\n    dateOfPhotos: null,\n    setDateOfPhotos: () => null\n});\n\n// example json object for rover from api\n// const json = {\n//     \"id\": 5,\n//     \"name\": \"Curiosity\",\n//     \"landing_date\": \"2012-08-06\",\n//     \"launch_date\": \"2011-11-26\",\n//     \"status\": \"active\",\n//     \"max_sol\": 3078,\n//     \"max_date\": \"2021-04-03\",\n//     \"total_photos\": 484318,\n//     \"cameras\": [\n//         {\n//             \"id\": 20,\n//             \"name\": \"FHAZ\",\n//             \"rover_id\": 5,\n//             \"full_name\": \"Front Hazard Avoidance Camera\"\n//         }\n//     ]\n// }","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ReactComponent as RobotIcon } from '../static/img/robot.svg';\n\n\nimport { RoversContext } from '../contexts';\n\nfunction Navbar() {\n\n    const { selectedRover, setSelectedRover } = useContext(RoversContext);\n\n\n    return (\n        <nav className=\"navbar navbar-dark bg-primary sticky-top\">\n            <div className=\"container-fluid\">\n                <Link onClick={() => setSelectedRover(null)} to=\"/mars-rover-photos\" className=\"navbar-brand\"><RobotIcon style={{width: '2em', height: '100%'}} className=\"d-inline-block align-middle\"/><span className=\"align-middle ml-2\">Mars Rover Photos</span></Link>\n                <ul className=\"nav nav-pills\">\n                    <li className=\"nav-item\">\n                        {selectedRover &&\n                            <ReturnToRoverSelectionNavLink/>\n                        }\n                    </li>\n                </ul>\n            </div>\n            \n        </nav>\n    )\n}\n\n\nconst ReturnToRoverSelectionNavLink = () => {\n    const { setSelectedRover } = useContext(RoversContext);\n    const handleClick = (event) => {\n        setSelectedRover((prev) => null);\n    }\n    return (\n        <Link onClick={handleClick} className=\"nav-link active bg-dark text-light\" to=\"/mars-rover-photos\">Select Rover</Link>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { RoversContext } from '../contexts';\n\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Modal from 'react-bootstrap/Modal';\n\n\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport Moment from 'react-moment';\n\nconst { REACT_APP_NASA_API_KEY } = process.env;\n\n\n\n\nconst DisplayPhotos = (props) => {\n\n    //photos currently a dictionary of format camera_name: [photos]\n    const [photos, setPhotos] = useState([]);\n    const [apiError, setApiError] = useState(null);\n\n    // filterOptions is an array of all available cameras that have photos\n    const [filterOptions, setFilterOptions] = useState([]);\n    // toggle all filters on or off on button click\n    const [toggleOn, setToggleOn] = useState(true);\n\n    const [sol, setSol] = useState(1);\n\n    const [numApiCalls, setNumApiCalls] = useState(0);\n    const [photosLoaded, setPhotosLoaded] = useState(false);\n\n    // For Modal once photo is selected\n    const [showModal, setShowModal] = useState(false);\n    const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n    const { rovers, selectedRover, setSelectedRover, dateOfPhotos, setDateOfPhotos } = useContext(RoversContext);\n\n    useEffect(() => {\n        // Set selectedRover once App component has updated state if user went straight to /:rover path and did not set rover name \n        if ((selectedRover === null | selectedRover === undefined) && rovers.length > 0) {\n            setSelectedRover(() => {\n                const rover = rovers.filter(rover => rover.name.toLowerCase() === props.match.params.rover.toLowerCase())[0];\n                return rover;\n            });\n        }\n    },[rovers]);\n\n    useEffect(() => {\n        getPhotos();\n    },[sol]);\n\n    const getPhotos = () => {\n        setPhotosLoaded(false);\n        // Call to get photos\n        axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${props.match.params.rover.toLowerCase()}/photos`, {\n            params: {\n                \"api_key\": REACT_APP_NASA_API_KEY,\n                \"sol\": sol\n            }\n        })\n      .then(res => {\n        setPhotos(() => {\n            const photo_objects = processPhotoData(res.data);\n            setFilterOptions(() => {return photo_objects.map(photo => {return photo.camera})});\n            //set dateOfPhotos state var\n            setDateOfPhotos(() => {\n                var date = null;\n                if (photo_objects && photo_objects.length > 0) {\n                    date = photo_objects[0].photos[0].earth_date;\n                };\n                return date;\n            })\n            return photo_objects;\n        });\n        \n        setNumApiCalls((prev) => prev + 1);\n        setPhotosLoaded(true);\n        setApiError(null);\n      })\n      .catch(error => {\n          setApiError(error.message);\n      });\n    }\n\n    const handleFilterOptionsChange = (selectedValues) => {\n        setFilterOptions(selectedValues);\n    }\n\n    const handleSolSliderChange = (e) => {\n        setSol(e.target.value);\n    }\n\n\n    //process api data\n    function processPhotoData(data) {\n        const data_objects = data.photos.map(photo => (\n            {\n                id: photo.id,\n                sol: photo.sol,\n                camera: {\n                    id: photo.camera.id,\n                    name: photo.camera.name,\n                    full_name: photo.camera.full_name,\n                    rover_id: photo.camera.rover_id\n                },\n                img_src: photo.img_src,\n                earth_date: photo.earth_date,\n                rover: {\n                    id: photo.rover.id,\n                    name: photo.rover.name,\n                    landing_date: photo.rover.landing_date,\n                    launch_date: photo.rover.launch_date,\n                    status: photo.rover.status\n                }\n            }\n        ));\n\n        const grouped_data = data_objects\n            .reduce((newDataDict, obj) => {\n                return Object.assign(\n                newDataDict, \n                {\n                    [obj['camera']['name']]:(newDataDict[obj['camera']['name']] || []).concat(obj)\n                }\n                );\n            },{});\n\n        const grouped_data_keys = Object.keys(grouped_data)\n            .map((camera) => {\n                return { \n                    camera: camera,\n                    name: grouped_data[camera][0]['camera']['full_name'],\n                    photos: grouped_data[camera]\n                }\n        });\n\n\n        return grouped_data_keys;\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                {!apiError && \n\n                    <>\n                        {/* Slider for selecting sol/day */}\n                        <div className=\"row mb-2\">\n                            <div className=\"col pl-3 pr-3\">\n                                <SliderWithInputFormControl \n                                    min={1}\n                                    max={selectedRover ? selectedRover.max_sol : 1}\n                                    initial={sol}\n                                    sliderValue={sol}\n                                    onSliderChange={handleSolSliderChange}\n                                />\n                                \n                            </div>\n                        </div>\n                        {/* End of Slider */}\n\n                        \n\n\n                        {/* Toggle Buttons for Filtering Photos by Camera */}\n                        {dateOfPhotos &&\n                            <div className=\"row pr-3 pb-2\">\n                                <div className=\"pl-3 pr-3\">\n                                    {/* Button to toggle all filters on or off */}\n                                    <ButtonGroup toggle>\n                                        <ToggleButton\n                                        type=\"checkbox\"\n                                        variant=\"outline-secondary\"\n                                        checked={toggleOn}\n                                        value=\"1\"\n                                        onChange={(e) => {\n                                            setToggleOn(e.currentTarget.checked);\n                                            if (e.currentTarget.checked) {\n                                                setFilterOptions(() => {return photos.map(photo_group => {return photo_group.camera})});\n                                            } else {\n                                                setFilterOptions([]);\n                                            }\n                                        }}\n                                        >\n                                        Toggle Filter\n                                        </ToggleButton>\n                                    </ButtonGroup>\n                                    \n                                </div>\n                                <div className=\"col overflow-auto pl-0 pr-0 pb-3\">\n                                    <ToggleButtonGroup \n                                        type='checkbox' \n                                        name='camera_filter_options' \n                                        defaultValue={[]} // defaultValue not working\n                                        value={filterOptions} \n                                        onChange={handleFilterOptionsChange}\n                                    >\n                                    {photos.map(photo_group => (\n                                                <ToggleButton key={photo_group.camera} value={photo_group.camera} className=\"d-flex justify-content-between align-items-start photo\" variant=\"outline-primary\">\n                                                    <Badge  text=\"dark\">{photo_group.photos.length} photos</Badge>\n                                                    <span className=\"pl-2\">{photo_group.camera}</span>\n                                                </ToggleButton>\n                                        ))}\n                                        \n                                                \n                                    </ToggleButtonGroup>\n                                </div>\n                            </div>\n\n                        }\n                        {/* End of ToggleButtons for Camera Filters */}\n                        \n\n                        {/* Filter Images */}\n                        {!dateOfPhotos &&\n                            <div className=\"m-3\">\n                                <h5>There are no photos available for this sol...</h5> \n                                <p>This most likely means no photos were taken by this rover on this day.</p>\n                            </div>\n                        }\n                        {dateOfPhotos &&\n                            <div className=\"row bg-dark\">\n                                <div className=\"col d-flex overflow-auto px-0\">\n                                    {photos.filter(photo_group => {return filterOptions.includes(photo_group.camera) }).map(photo_group => {\n                                        return (\n                                            <>\n                                                <CameraPhotoList photo_group={photo_group} setSelectedPhotoObj={setSelectedPhoto}/>\n                                            </>\n                                        )\n                                    })}\n                                </div>\n                                \n                                    \n                                \n                            </div>\n                        }\n                        {/* End of Filter Images */}\n                        \n                    </>\n\n                }\n\n                {apiError && \n                    <>\n                        <h3>There was an error making the api request...</h3>\n                        <p>{apiError}</p>\n                    </>\n                    \n                }\n                \n            </div>\n\n            {/* Modal for displaying selected photo */}\n            {<SelectedPhotoModal show={showModal} modalPhotoObj={selectedPhoto} setModalPhotoObj={setSelectedPhoto}/>}\n        </>\n    )\n};\n\n\nexport default DisplayPhotos;\n\n\nconst CameraPhotoList = ({ photo_group, setSelectedPhotoObj }) => {\n\n    return (\n        <div key={photo_group.camera} className=\"d-flex\" style={{height: '50vh'}}>\n            <div \n                style={{zIndex: 1, position: 'absolute', cursor: 'pointer'}} \n                className=\"m-2 text-white bg-primary rounded\"\n            >\n                <h5 className=\"m-1 ml-2 mr-2\">{photo_group.camera}</h5>\n            </div>\n\n            {photo_group.photos.map(photo => (\n                <Photo photo={photo} setModalPhotoObj={setSelectedPhotoObj}/>\n            ))}\n\n        </div>\n    )\n};\n\nconst Photo = ({ photo, setModalPhotoObj }) => {\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        setModalPhotoObj(photo);\n    }\n    return (\n        <img onClick={handleClick} key={photo.id} className=\"mr-1 photo\" src={photo.img_src} alt=\"\"/>\n    );\n}\n\n\n\nconst SolToolTipOverlayTrigger = () =>{\n    const solToolTipText = 'A sol is a solar day on Mars. The range slider value represents the number of days on mars from the time the rover landed.';\n\n    return (\n        <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={<Tooltip>{solToolTipText}</Tooltip>}\n            >\n            <div>Sol</div>\n            \n        </OverlayTrigger>\n    )\n}\n\nconst SliderWithInputFormControl = (props) => {\n\n    \n\n    const initialSliderValue = props.initial;\n    const [ value, setValue ] = useState(initialSliderValue);\n  \n    return (\n      <Form>\n        <Form.Group as={Row}>\n          <Col xs=\"6\" md=\"8\" lg=\"10\"className=\"pr-0 pl-0\">\n            <RangeSlider\n              min={props.min}\n              max={props.max}\n              value={value}\n              tooltipPlacement='top'\n              onChange={e => setValue(e.target.value)}\n              onAfterChange={props.onSliderChange}\n            />\n          </Col>\n          <Col xs=\"6\" md=\"4\" lg=\"2\" className=\"pr-0\">\n          <InputGroup>\n          \n        <InputGroup.Text>\n            <SolToolTipOverlayTrigger/>\n        </InputGroup.Text>\n          \n            <Form.Control \n                value={props.sliderValue} \n                onChange={(e) => {\n                    props.onSliderChange(e);\n                    setValue(e.target.value);\n                }}/>\n          </InputGroup>\n          \n          </Col>\n        </Form.Group>\n      </Form>\n    );\n  \n  };\n\n\nexport const DateDisplay = () => {\nconst { dateOfPhotos } = useContext(RoversContext);\nuseEffect(() => {\n},[dateOfPhotos])\nreturn (\n    <Moment format=\"D MMM YYYY\">\n        {dateOfPhotos}\n    </Moment>\n);\n}\n\nconst SelectedPhotoModal = ({show, modalPhotoObj, setModalPhotoObj}) => {\n\n    \n\n    const handleClose = () => {\n        setModalPhotoObj(null);\n    };\n\n    return (\n        <>\n            {/* Modal shows if the modalPhotoObj state variable is anything but null */}\n            <Modal show={modalPhotoObj ? true : false} onHide={handleClose} size=\"lg\" centered>\n                <Modal.Header closeButton>\n                <Modal.Title>\n                    {modalPhotoObj && \n                        `${modalPhotoObj.rover.name} Photo (ID: ${modalPhotoObj.id})`\n                    }\n                </Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{display: \"flex\", justifyContent: \"center\"}}>\n                    {modalPhotoObj && \n                        <img style={{overflow: \"hidden\"}}src={modalPhotoObj.img_src} alt=\"\" />\n                    }\n                </Modal.Body>\n                <Modal.Footer style={{display: 'inline'}}>\n                    {modalPhotoObj &&\n                        <>\n                            <p><span className=\"font-weight-bold\">Date Taken:</span> <Moment format=\"D MMM YYYY\">{modalPhotoObj.earth_date}</Moment></p>\n                            <p><span className=\"font-weight-bold\">Camera:</span> {`${modalPhotoObj.camera.full_name} (${modalPhotoObj.camera.name})`}</p>\n                        </>\n\n                    }\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nimport RoverPhotos from './RoverPhotos';\n\nimport { ReactComponent as RobotIcon } from '../static/img/robot.svg';\n\n\nimport { RoversContext } from '../contexts';\n\nimport { DateDisplay } from './RoverPhotos';\n\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function ListRovers() {\n\n    const { rovers, selectedRover, setSelectedRover, dateOfPhotos } = useContext(RoversContext);\n\n    const handleClick = (event, roverID) => {\n        event.preventDefault();\n        setSelectedRover(rovers.filter((rover) => rover.id === roverID)[0]);\n    }\n\n\n    return (\n        <>\n\n            {/* New Card for Rover */}\n            <div className=\"container py-5\">\n                {/* <div className=\"icon-square text-bg-light d-inline-flex align-items-center justify-content-center fs-4 flex-shrink-0 me-3\">\n                </div> */}\n                <div className='col d-flex align-items-start border-bottom px-0'>\n                    {/* {selectedRover &&\n                        <ReturnToRoverSelectionBtn>\n                            <img src={LeftArrowIcon} alt=\"Back Button\" className='btn btn-primary mr-2 mt-1'/>\n                        </ReturnToRoverSelectionBtn>\n                    } */}\n                    <h2 className=\"\">\n                        {selectedRover ? selectedRover.name + \" Photos\" : \"Select Rover\"}\n                        {(rovers[0].name == 'default') &&\n                            <Spinner className=\"ml-2\" animation=\"grow\" variant=\"primary\" size='lg'/>\n                        }\n                    </h2>\n                    <h2 className=\"ml-auto text-nowrap\">{selectedRover && dateOfPhotos && <DateDisplay/>}</h2>\n                    \n                </div>\n                \n                {!selectedRover && \n                    <>\n                        <div className=\"row g-4 py-5 row-cols-1 row-cols-lg-4\">\n                            \n                            {(rovers[0].name != 'default') && \n                                rovers.map(rover => (\n                                    <NavigateToRoverPhotosBtn key={rover.name} roverName={rover.name}>\n                                        <FeaturedRover rover={rover} onClick={(event) => handleClick(event, rover.id)}/>\n                                    </NavigateToRoverPhotosBtn>\n                                ))\n                            }\n                            \n                        </div>\n                    </>\n                    \n                    \n                } \n            </div> \n            <Switch>\n                <Route path=\"/mars-rover-photos/:rover\" component={RoverPhotos} />\n            </Switch>       \n        </>\n    )\n}\n\nexport const ReturnToRoverSelectionBtn = (props) => {\n    let history = useHistory();\n    const { setSelectedRover } = useContext(RoversContext);\n    const handleClick = (event) => {\n        //set selectedRover to null which will rerender rover selection options.\n        event.preventDefault();\n        setSelectedRover((prev) => null);\n        history.push(\"/mars-rover-photos\");\n    }\n    return (\n        <div onClick={handleClick}>\n            {props.children}\n        </div>\n    )\n}\n\nconst NavigateToRoverPhotosBtn = (props) => {\n    let history = useHistory();\n    \n\n    const handleClick = (event) => {\n        event.preventDefault();\n        history.push(`/mars-rover-photos/${props.roverName}`);\n    }\n\n    return (\n        <div onClick={handleClick}>\n            {props.children}\n        </div>\n    )\n}\n\n\nconst FeaturedRover = ({ rover, onClick }) => {\n    return (\n        <div \n            className=\"col btn featured-rover\"\n            onClick={onClick}\n        >\n            <div className=\"feature-icon d-inline-flex align-items-center justify-content-center text-bg-primary bg-gradient fs-2 mb-3\">\n                <RobotIcon style={{width: '5vw', height: '5vw'}}/>\n            </div>\n            <h3 className=\"fs-2\">{rover.name}</h3>\n            <p className=\"card-text\">Mission Status: <span className={`card-text ${rover.status==='active' ? \"text-success\" : \"text-secondary\"}`}>{rover.status}</span> </p>\n            <p className=\"text-muted\">Available Photos: {rover.total_photos}</p>\n            <Link to={`/mars-rover-photos/${rover.name}`} className=\"btn btn-primary\">View All Photos</Link>\n        </div>\n    )\n}","const Footer = () => {\n    return (\n        <footer className=\"footer navbar navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <div>Website design and development by Daniel Oram using data publicly available through the <a href=\"https://api.nasa.gov/\">Nasa API Portal.</a></div>\n                <div className=\"text-right\"><a href=\"https://github.com/DanielOram\">Github</a></div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Navbar from './components/Navbar';\nimport ListRovers from './components/ListRovers';\nimport Footer from './components/Footer';\nimport { RoversContext } from './contexts';\n\n// const baseApi = \"https://api.nasa.gov/mars-photos/api/v1/\"\n\n\nconst { REACT_APP_NASA_API_KEY } = process.env;\n\n\n\nfunction App() {\n\n  // make api call here to get information about each rover (number of sol etc)\n  const [rovers, setRovers] = useState([{ name: 'default'}]);\n  const [selectedRover, setSelectedRover] = useState(null);\n  const [dateOfPhotos, setDateOfPhotos] = useState(null);\n  const [apiError, setApiError] = useState();\n\n  useEffect(() => {\n    axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers`, {\n        params: {\n            \"api_key\": REACT_APP_NASA_API_KEY\n        }\n    })\n  .then(res => {\n    setRovers(res.data.rovers.map(rover => (\n        {\n            id: rover.id,\n            name: rover.name,\n            landing_date: rover.landing_date,\n            launch_date: rover.launch_date,\n            status: rover.status,\n            max_sol: rover.max_sol,\n            max_date: rover.max_date,\n            total_photos: rover.total_photos,\n            cameras: rover.cameras.map(camera => (\n                {\n                    id: camera.id,\n                    name: camera.name,\n                    rover_id: camera.rover_id,\n                    full_name: camera.full_name\n                }\n            ))\n        }\n    )))\n  })\n  .catch(error => {\n    console.log(error.response.data.error);\n    setApiError(error);\n });;\n},[])\n\n  return (\n    <div className=\"App\">\n      <RoversContext.Provider value={{ rovers, selectedRover, setSelectedRover, dateOfPhotos, setDateOfPhotos }}>\n        <Navbar />\n        {apiError && \n            <h4>There was an api error: {apiError}</h4>\n        }\n        <ListRovers />\n        <Footer />\n      </RoversContext.Provider>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}